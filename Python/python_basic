#打印
print("hello")
# -*- coding: UTF-8 -*-
#(# -*- coding: UTF-8 -*-或者输入# coding=utf-8  防止中文编码报错) 
print("你好")
#if 判断语句
a = 10
if a == 10:
    print("a is equal to 10")
else:
    print("a is not equal to 10")
#打印列表
list = ["libai","dufu"]
print (list)
#保留字符
# and	exec	not
# assert	finally	or
# break	for	pass
# class	from	print
# continue	global	raise
# def	if	return
# del	import	try
# elif	in	while
# else	is	with
# except	lambda	yield

# python中的if语句可以不适用大括号
if True:
    print(True)
else:
    print(False)

# 换行操作
one = 1
two = 2
three = 3
line = one + \
       two + \
       three
print(line)

# 语句中包含 [], {} 或 () 括号就不需要使用多行连接符
lines = ['a','b',
        'c']
print(lines)

# raw_input = ("按enter健退出，其他任意键显示...\n")
# print(raw_input)

# 输出
import sys
mystdout = "hello"
sys.stdout.write(mystdout+"\n")
# 将以上的信息在一行中输出
import sys; x = "hello"; sys.stdout.write(x+"\n")

# 不换行输出
x =1;y=2
print (x,y)
a = 10.0
print(a)
# 同事给多个变量赋值
a = b = c = 1
print(a)
a,b,c = 1,2,'libai'
print(a,b,c)
# del a
# print(a) #NameError: name 'a' is not defined

# Python支持四种不同的数字类型：

# int（有符号整型）
# long（长整型，也可以代表八进制和十六进制）
# float（浮点型）
# complex（复数）


# 索引
  # 从左到右默认是0开始，从右向左默认是-1，-2，...，下标为空则整体输出
strings = "abcdef"
print(strings[0]) #a 
print(strings[-1]) #f
print(strings[2:4]) #cd
print(strings[:3]) #abc
print(strings[3:]) #def
print(strings[::-1]) #fedcba 投下标：尾下标

# 输出两次
print(strings*2) #abcdefabcdef

# 字符串拼接
new_string = strings + "TEST"
print(new_string) #abcdefTEST

# 列表索引
list = ["hello",985,168.2,"world"]

print(list)
print(list[0]) #hello
print(list[-1])
print(list[:2])
print(list[2:]) 
print(list[::-1])

# 元组tuple类似，这里不在列举

# 字典
dict = {}
print(type(dict))
dict['one'] = "This is one"
dict[2] = "This is two"
print(dict)
print(dict['one']) #This is one
print(dict[2]) #This is two
print(dict.keys()) #dict_keys(['one', 2])
print(dict.values()) #dict_values(['This is one', 'This is two'])
print(dict.items()) #dict_items([('one', 'This is one'), (2, 'This is two')])


# 运算符 + - * / % // **
